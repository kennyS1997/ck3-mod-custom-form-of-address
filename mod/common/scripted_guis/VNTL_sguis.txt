# IsValid() - whether title given as root is one of the vanity titles.
VNTL_sgui_is_vanity_title = {
	scope = title

	is_valid = {
		VNTL_is_vanity_title = yes
	}
}

# IsValid() - whether character given as root holds a vanity title
VNTL_sgui_has_vanity_title = {
	scope = character

	is_valid = {
		VNTL_has_vanity_title = yes
	}
}

# Partial logic for "Edit FoA" button in window_title.gui .
# If necessary, this prepares vanity title and binds it to the primary title given as root.
# I.e. it selects available VT and makes the player its holder,
# sets VNTL_bound_vanity_title variable on the given primary title
# and sets VNTL_bound_primary_title variable on the VT.
# Actual opening of "Edit FoA" window (which is simply the rename window
# for bound vanity title with labels changed) is achieved
# via subsequent call to OpenTitleRenamePopup() in onclick action.
#
# IsShown() - visible for any player-held title.
# IsValid() - enabled only for player's primary title.
# Execute() - bind an available[1] vanity title to the given primary title.
#
# [1] For VT selection logic see VNTL_select_best_available_vanity_title_for_primary_title
# scripted effect, which this sgui's effect uses internally.
VNTL_sgui_bind_vanity_title = {
	scope = title

	saved_scopes = {
		player
	}

	is_shown = {
		exists = holder
		holder = scope:player
		#NOT = { has_variable = VNTL_bound_vanity_title }
	}

	is_valid = {
		scope:player = {
			primary_title = root
		}
	}

	effect = {
		holder = {
			# Find an available vanity title and bind it to this character's primary title.
			trigger_event = VNTL_events.1001
		}
	}
}

# Unbind and destroy the VT currently bound to the given primary title, if there is still such a bond.
# I.e. it clears VNTL_bound_vanity_title and destroys the VT it was pointing to.
# Note the reciprocal VNTL_bound_primary_title on the VT remains unchanged
# (this is so this same VT would be chosen first, should another attempt to bind a VT be made).
#
# IsValid() - enabled only for player's primary title.
# Execute() - unbind the VT (if currently bound) from the given primary title
VNTL_sgui_unbind_vanity_title = {
	scope = title

	saved_scopes = {
		player
	}

	is_shown = {
		exists = holder
		holder = scope:player
		#has_variable = VNTL_bound_vanity_title
	}

	is_valid = {
		scope:player = {
			primary_title = root
		}
	}

	effect = {
		holder = {
			# Unbind and destroy vanity title, if one is currently bound to this character's primary title.
			trigger_event = VNTL_events.1002
		}
	}
}
