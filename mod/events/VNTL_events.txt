namespace = VNTL_events

# Find an available vanity title and bind it to this character's primary title.
VNTL_events.1001 = {
	type = character_event

	hidden = yes

	immediate = {
		debug_log = "VNTL_events.1001 (Find an available vanity title and bind it to this character's primary title.)"

		assert_if = {
			limit = { NOT = { exists = primary_title } }

			text = "character must have a primary title"
		}

		primary_title = {
			if = {
				limit = {
					NOT = { VNTL_has_current_bound_vt = yes }
				}

				# This sets scope:selected_vanity_title
				VNTL_select_best_available_vanity_title = yes

				assert_if = {
					limit = { NOT = { exists = scope:selected_vanity_title } }

					text = "VT selection must always succeed"
				}

				VNTL_bind_vanity_title = {
					VANITY_TITLE = scope:selected_vanity_title
				}

				# TODO: Also reinit VT (reset FoA to default suggestions, maybe reset CoA)
				# scope:selected_vanity_title = {
				# 	VNTL_reinit_vanity_title = yes
				# }
			}
		}
	}
}

# Test event, not used in production.
VNTL_events.1999 = {
	type = character_event

	hidden = yes

	immediate = {
		debug_log = "VNTL_events.1999 (test event)"

		every_duchy = {
			limit = {
				VNTL_is_vanity_title = yes

				# This works.
				# is_target_in_global_variable_list = {
				# 	name = VNTL_vanity_titles
				# 	target = THIS
				# }
			}

			# FIXME: Testing
			#set_coa = title:k_papal_state
			# END FIXME

			debug_log = "HIT 1"
		}

		# This works.
		# every_in_global_list = {
		# 	variable = VNTL_vanity_titles

		# 	debug_log = "HIT 2"
		# }
	}
}
